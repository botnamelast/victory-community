plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    // STEALTH: Change namespace to innocent name
    namespace 'com.android.systemhelper'
    compileSdk 34

    defaultConfig {
        // STEALTH: Change applicationId to stealth package
        applicationId "com.android.systemhelper"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Native library support
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // STEALTH: Change APK name to innocent (fixed version)
            archivesBaseName = "SystemHelper-v1.0.0"
            
            // Signing config (for future releases)
            // signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
            
            // STEALTH: Debug version also stealth (fixed version)
            archivesBaseName = "SystemHelper-debug-v1.0.0"
        }
    }
    
    // STEALTH: Product flavors for dual mode (alternative approach)
    flavorDimensions "version"
    productFlavors {
        stealth {
            dimension "version"
            applicationId "com.android.systemhelper"
            versionNameSuffix "-stealth"
        }
        original {
            dimension "version"
            applicationId "com.victory.community"
            versionNameSuffix "-original"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    // STEALTH: Package options to remove metadata
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }

    // Native library configuration (optional)
    /* 
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
    */
}

dependencies {
    // Core AndroidX libraries (based on analysis)
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.activity:activity-ktx:1.8.2'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-service:2.7.0'

    // Material Design (from analysis)
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Overlay & System services
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    
    // Root utilities (conditional)
    implementation 'eu.chainfire:libsuperuser:1.1.0.+'
    
    // OpenCV (optional - we can add later)
    // implementation project(':opencv')
    
    // Permissions handling
    implementation 'com.karumi:dexter:6.2.3'
    
    // Preferences
    implementation 'androidx.preference:preference-ktx:1.2.1'
    
    // JSON handling (for configs)
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

